
 
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.ajoberstar.grgit:grgit-gradle:3.1.1"
  }
}

apply plugin: 'java'
apply plugin: "org.ajoberstar.grgit"

sourceCompatibility = 1.8
targetCompatibility = 1.8

sourceSets {
    main {
        java {
            srcDirs 'src_java_jaxb_classes_from_xsd'
            srcDirs 'src_create_import_file_from_java_objects'
            srcDirs 'src_constants'
        }
    }
}

processResources {
    from ('xsd') {
        include '**/*.xsd'
    }
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    // JAXB dependencies (Required for Java 11+)
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '2.3.2'
    implementation group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.2'
}

//  Assign to grgit, created by plugin
def gitRepo = grgit


// def gitRepo = Grgit.open({
//  dir = ".."  //  Use parent directory since that is root of GIT repo
//  currentDir = <path>
//  credentials = <credentals>
// })


def gitHeadId = gitRepo.head().id
def gitCommit = gitRepo.head().getAbbreviatedId(8)
def gitBranch = gitRepo.branch.getCurrent().getName()

//  Get tag at GIT HEAD: like git tag --points-at HEAD
def repoHead = gitRepo.head()
def repoHeadTag = gitRepo.tag.list().find {
	it.commit == repoHead
}
def repoTagName = "NO GIT Tag at HEAD"

if ( repoHeadTag ) {
	println("GIT Tag at HEAD found")
	repoTagName = repoHeadTag.getName()
}


println("gitHeadId: " + gitHeadId )
println("gitCommit: " + gitCommit )
println("gitBranch: " + gitBranch )
println("GIT Tag at HEAD: " + repoTagName )

jar {
    baseName 'proxl-import-api'
    manifest {
	    attributes([ 'Project-Title': project.name,
					'Build-Timestamp': new Date().format("yyyy-MM-dd HH:mm:ssZ"),
					'Git-Commit': gitCommit,
					'GIT-Full-HASH': gitHeadId,
					'GIT-Tag-at-HEAD': repoTagName,
					'Git-Branch': gitBranch ])
    }
}